service: reporte-canibalizacion
frameworkVersion: ">=3.12.0"

provider:
  name: aws
  profile: default
  timeout: 900 # The default is 6 seconds. Note: API Gateway current maximum is 30 seconds
  runtime: python3.7
  # deploymentBucket: lambda-modelos
  # environment: ${self:custom.settings.${self:custom.stage}}
  environment:
    stage: ${opt:stage,'dev'}
    STAGE: ${sls:stage}
    aws_region: us-east-1
    SERVICE_NAME: "reporte-canibalizacion"
    PG_TARGET_SCHEMA: "aws_migrations"
    S3_BUCKET_DATALAKE: "georesearch-datalake"
    CREATE_ATHENA_TABLE_LAMBDA_NAME: "worker-athena-create-table"
    SOURCE_DB: "prod_countries"
    TARGET_DB: "prod_inputs_estudios"
    DATALAKE_DB: "prod_countries"
    DATALAKE_CRAWLER: "dms_${sls:stage}_georesearch_datalake"
    DELIVERY_PREFIX: "georesearch_deliveries"
    PREFIX_DMS: ""
    QUERY_LIMIT: ""
    WAITING_TIME_IN_SECONDS: 900
    SF_01_NAME_PARALLELIZE_ETLS: workflow_${sls:stage}_${self:service}_parallelize_etls
    SF_02_NAME_DMS_SERVICE: workflow_${sls:stage}_dms_replicacion
    # 5 dias
    EXPIRE_URL_SECONDS: 7776000
  # lambdaHashingVersion: 20201221
  # managedPolicyArns:
  #     - 'arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess'
  # httpApi:
  #     shouldStartNameWithService: true
  #     name: ${sls:stage}
  
  # Use function versioning (enabled by default)
  versionFunctions: false
  vpc:
    securityGroupIds:
      - sg-039020eb5f5ef8c4a
    subnetIds:
      - subnet-24588852
      - subnet-068b91a2d1ed25081
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Resource: '*'
          Action:
            - "s3:*"
            - "lambda:*"
            - "glue:StartJobRun"
            - "glue:GetTable"
            - "glue:GetTables"
            - "glue:GetCrawler"
            - "glue:UpdateCrawler"
            - "glue:CreateTable"
            - "glue:DeleteTable"
            - "glue:GetDatabase"
            - "glue:StartCrawler"
            - "athena:StartQueryExecution"
            - "athena:GetQueryExecution"
            - "athena:GetQueryResults"
            - "stepFunctions:StartExecution"
            - "states:StartExecution"
            - "states:DescribeExecution"
            - "xray:PutTraceSegment"
            - "xray:PutTraceSegments"
            - "xray:PutTelemetryRecords"
  apiGateway: 
    description: AG para inputs estudios # optional - description of deployment history

    # tracing:
    #   lambda: true

package:
  individually: true
  #  Si desea excluir archivos, puede usar un patr贸n global con el prefijo ! (https://www.serverless.com/framework/docs/providers/aws/guide/packaging/#patterns)
  patterns:
      - "!./**/*"
      - '!node_modules/**' 
      - '!.requirements/**'
      - '!env/**'
      - '!README.md'
      - '!package.json'
      - '!package-lock.json'
      - '!requirements.txt'
      - ".requirements.zip"
      - "sql_queries/**"
      - "utils/**"
    # - "!*.md"
    # - "psycopg2/**"
    # - "sql_queries/athena/**.sql"
    # # - "src/**" 
    # - "serverless.yml"
    # - "requirements.txt"
    # - "Dockerfile"

plugins:
  - serverless-python-requirements 
  - serverless-prune-plugin
  - serverless-step-functions
custom:
  stage: ${opt:stage, self:provider.stage}
  settings:
    dev:
      STAGE: ${self:custom.stage}
    prod:
      STAGE: ${self:custom.stage}
  pythonRequirements:
    # layer: true
  #   #dockerImage:
  #   fileName: requirements.txt
    # dockerizePip: true
    dockerizePip: non-linux
    layer: true
    zip: true
    # slim: false #false for jinja an add test files 
    # strip: false # avoid some ELF alignment issues
    slimPatternsAppendDefaults: false
    slimPatterns:
    - '**/*.py[c|o]'
    - '**/*.egg-info*'
    - '**/__pycache__*'
    - '**/*.dist-info*'
    - '**/dist-info*' 
    # - '**/test*'
    # - '**/*.test*'  
    # layer:
    #   # path:
    #   #   - /layer
    #   layer: true
    #   name: pip-layer
    #   description: Python requirements lambda layer
    #   compatibleRuntimes:
    #     - python3.6
    #   allowedAccounts:
    #     - "*"
    useDownloadCache: true
    useStaticCache: true
    # cacheLocation: "./cache"
    # # pipCmdExtraArgs:
    # #   - --no-deps
    zipImport: true
  prune: #serverless-prune-plugin configuration: 3 versions are kept
    automatic: true
    number: 2

# stepFunctions:
#   # Para importarlas solo exportar la sf desde la consola web como yaml y hacer los reemplasos de los stage _dev_ por _${self:custom.stage}_
#   #  o  -dev- por -${self:custom.stage}-
#   # Nomenclatura de nombres:  WORKFLOW_<STAGE>_${self:service}_<SF_NAME>
#   # IMPORTANTE CUIDADO DE PISAR LAS LLAMADA A OTRAS SF , EL STAGE SE SETEA CON : workflow_${self:custom.stage}_
#   # ej :arn:aws:states:us-east-1:958531303673:stateMachine:workflow_${self:custom.stage}_${self:service}_parallelize_locales_propios
#   # Ojo que en el etl 05_consolidar tbn lambda  : arn:aws:lambda:us-east-1:958531303673:function:reporte-canibalizacion-${self:custom.stage}-etl
#   stateMachines:
#     sf_1:
#       name: workflow_${self:custom.stage}_${self:service}_parallelize_etls
#       role: arn:aws:iam::958531303673:role/service-role/StepFunctions-DMSCreateReplicationInstance-role-566d43b8
#       definition:
#         ${file(./resources/step_functions/01_parallelize_etls.asl.yaml)}
#       tracingConfig:
#         enabled: true
#     sf_2:
#       name: workflow_${self:custom.stage}_${self:service}_etl
#       role: arn:aws:iam::958531303673:role/service-role/StepFunctions-DMSCreateReplicationInstance-role-566d43b8
#       definition:
#         ${file(./resources/step_functions/02_etl.asl.yaml)}
#       tracingConfig:
#         enabled: true
#     sf_3:
#       name: workflow_${self:custom.stage}_${self:service}_parallelize_locales_propios
#       role: arn:aws:iam::958531303673:role/service-role/StepFunctions-DMSCreateReplicationInstance-role-566d43b8
#       definition:
#         ${file(./resources/step_functions/03_parallelize_locales_propios.asl.yaml)}
#       tracingConfig:
#         enabled: true
#     sf_4:
#       name: workflow_${self:custom.stage}_${self:service}_parallelize_workers
#       role: arn:aws:iam::958531303673:role/service-role/StepFunctions-DMSCreateReplicationInstance-role-566d43b8
#       definition:
#         ${file(./resources/step_functions/04_parallelize_workers.asl.yaml)}
#       tracingConfig:
#         enabled: true
#     sf_5:
#       name: workflow_${self:custom.stage}_${self:service}_consolidar
#       role: arn:aws:iam::958531303673:role/service-role/StepFunctions-DMSCreateReplicationInstance-role-566d43b8
#       definition:
#         ${file(./resources/step_functions/05_consolidar.asl.yaml)}
#       tracingConfig:
#         enabled: true
    
#     sf_dms_1:
#       name: workflow_${self:custom.stage}_dms_replicacion
#       role: arn:aws:iam::958531303673:role/service-role/StepFunctions-DMSCreateReplicationInstance-role-566d43b8
#       definition:
#         ${file(./resources/step_functions/01_dms_replication.asl.yaml)}
#       tracingConfig:
#         enabled: true




functions:

  master-report:
    # name: ${self:service}-modelv2-${self:custom.stage}
    description:   ${self:service}  Servicio de creacion de reportes para canibalizaci贸n  [${self:custom.stage}]
    memorySize: 256
    handler: api_reportes.master_report
    # Maximum retry attempts when an asynchronous invocation fails (between 0 and 2; default: 2)
    maximumRetryAttempts: 0
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
      # - arn:aws:lambda:us-east-1:233683678126:layer:xgboost:3
      # -  arn:aws:lambda:us-east-1:898466741470:layer:psycopg2-py38:2
      # - arn:aws:lambda:us-east-1:898466741470:layer:psycopg2-py37:3
      # - arn:aws:lambda:us-east-1:336392948345:layer:AWSDataWrangler-Python37:5
    package:
      # individually: true
      #  Si desea excluir archivos, puede usar un patr贸n global con el prefijo ! (https://www.serverless.com/framework/docs/providers/aws/guide/packaging/#patterns)
      patterns: 
        # - "!./**/*"
        - "!*.md"
        - "utils/**/**/**/*.py"
        - "etls/**/**/**/*.py"
        # - "sql_queries/**/**/**/*.sql"
        - "*.py"
        - "*.zip"
        - ".requirements.zip"
        - "serverless.yml"
        - "requirements.txt"
        - "Dockerfile"

    events: 
      - http:
          path: /master-report
          method: POST
          integration: lambda
          cors: true
          private: true
          response:
            headers:
              Content-Type: "'application/json'"

  worker-athena-create-table:
    # name: ${self:service}-modelv2-${self:custom.stage}
    description:   ${self:service} Crea una tabla en Athena [${self:custom.stage}]
    memorySize: 500
    handler: api_reportes.worker_athena_create_table
    # Maximum retry attempts when an asynchronous invocation fails (between 0 and 2; default: 2)
    maximumRetryAttempts: 0
    layers:
      # - {Ref: PythonRequirementsLambdaLayer}
      # - arn:aws:lambda:us-east-1:233683678126:layer:xgboost:3
      # -  arn:aws:lambda:us-east-1:898466741470:layer:psycopg2-py38:2
      # - arn:aws:lambda:us-east-1:898466741470:layer:psycopg2-py37:3
      - arn:aws:lambda:us-east-1:336392948345:layer:AWSDataWrangler-Python37:5
    package:
      # individually: true
      #  Si desea excluir archivos, puede usar un patr贸n global con el prefijo ! (https://www.serverless.com/framework/docs/providers/aws/guide/packaging/#patterns)
      patterns: 
        # - "!./**/*"
        - "!*.md"
        - "sql_queries/**/**/**/*.sql"
        - "utils/**/**/**/*.py"
        - "etls/**/**/**/*.py"
        # - "./**/**.py"
        # - "./**/**.zip"
        - "*.py"
        - "*.zip"
        - ".requirements.zip"
        - "serverless.yml"
        - "requirements.txt"
        - "Dockerfile"

    # events:
    #   - http:
    #       path: /
    #       method: get
    #       cors: true


    description:   ${self:service} Crea una tabla en Athena para los inputs de estudios [${self:custom.stage}]
    memorySize: 500
    handler: api_etl.handler 
    # Maximum retry attempts when an asynchronous invocation fails (between 0 and 2; default: 2)
    maximumRetryAttempts: 0
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
      # - arn:aws:lambda:us-east-1:233683678126:layer:xgboost:3
      # -  arn:aws:lambda:us-east-1:898466741470:layer:psycopg2-py38:2
      # - arn:aws:lambda:us-east-1:898466741470:layer:psycopg2-py37:3
      - arn:aws:lambda:us-east-1:336392948345:layer:AWSDataWrangler-Python37:5
    package:
      # individually: true
      #  Si desea excluir archivos, puede usar un patr贸n global con el prefijo ! (https://www.serverless.com/framework/docs/providers/aws/guide/packaging/#patterns)
      patterns: 
        # - "!./**/*"
        - "!*.md"
        - "sql_queries/**/**/**/*.sql"
        - "utils/**/**/**/*.py"
        - "etls/**/**/**/*.py"
        - "*.zip"
        - ".requirements.zip"
        - "*.py"
        - "*.zip" 
        - "serverless.yml"
        - "requirements.txt"
        - "Dockerfile"

    # events:
    #   - http:
    #       path: /
    #       method: get
    #       cors: true

    # name: ${self:service}-modelv2-${self:custom.stage}
    description:   ${self:service} Retorna los enlaces de descarga a los archivos de una solicitude de reportes para estudios [${self:custom.stage}]
    memorySize: 256
    handler: api_reportes.get_download_links
    # Maximum retry attempts when an asynchronous invocation fails (between 0 and 2; default: 2)
    maximumRetryAttempts: 0
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
      # - arn:aws:lambda:us-east-1:233683678126:layer:xgboost:3
      # -  arn:aws:lambda:us-east-1:898466741470:layer:psycopg2-py38:2
      # - arn:aws:lambda:us-east-1:898466741470:layer:psycopg2-py37:3
      # - arn:aws:lambda:us-east-1:336392948345:layer:AWSDataWrangler-Python37:5
    package:
      # individually: true
      #  Si desea excluir archivos, puede usar un patr贸n global con el prefijo ! (https://www.serverless.com/framework/docs/providers/aws/guide/packaging/#patterns)
      patterns: 
        # - "!./**/*"
        - "!*.md"
        - "utils/**/**/**/*.py"
        - "etls/**/**/**/*.py"
        # - "sql_queries/**/**/**/*.sql"
        - "*.py"
        - "*.zip"
        - ".requirements.zip"
        - "serverless.yml"
        - "requirements.txt"
        - "Dockerfile"

    events: 
      - http:
          path: /download-links
          method: POST
          integration: lambda
          cors: true
          private: true
          response:
            headers:
              Content-Type: "'application/json'"