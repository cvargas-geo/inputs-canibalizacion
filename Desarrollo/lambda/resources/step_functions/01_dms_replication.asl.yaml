Comment: A description of my state machine
StartAt: SKIP CREATE INSTANCE
States:
  SKIP CREATE INSTANCE:
    Type: Choice
    Choices:
      - Variable: $.SKIP
        StringMatches: enable
        Next: DescribeReplicationInstances
    Default: CreateReplicationInstance
  CreateReplicationInstance:
    Type: Task
    Next: DescribeReplicationInstances
    Parameters:
      ReplicationInstanceClass.$: $.REPLICATION_INSTANCE_PARAMETERS.ReplicationInstanceClass
      ReplicationInstanceIdentifier.$: $.ReplicationInstanceIdentifier
      AllocatedStorage.$: $.REPLICATION_INSTANCE_PARAMETERS.AllocatedStorage
      EngineVersion.$: $.REPLICATION_INSTANCE_PARAMETERS.EngineVersion
      MultiAZ.$: $.REPLICATION_INSTANCE_PARAMETERS.MultiAZ
      ReplicationSubnetGroupIdentifier.$: $.REPLICATION_INSTANCE_PARAMETERS.ReplicationSubnetGroupIdentifier
      VpcSecurityGroupIds.$: $.REPLICATION_INSTANCE_PARAMETERS.VpcSecurityGroupIds
    Resource: arn:aws:states:::aws-sdk:databasemigration:createReplicationInstance
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: FAIL Pass
        ResultPath: $.CreateInstanceError
    ResultPath: $.CreateInstanceResult
  DescribeReplicationInstances:
    Type: Task
    Next: Choice (2)
    Parameters:
      Filters:
        - Name: replication-instance-id
          Values.$: $.FILTER_INSTANCE_REPLICATION
    Resource: arn:aws:states:::aws-sdk:databasemigration:describeReplicationInstances
    ResultPath: $.DescribeResult
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: FAIL Pass
        ResultPath: $.DescribeInstanceError
  Choice (2):
    Type: Choice
    Choices:
      - Variable: '$.DescribeResult.ReplicationInstances[0].ReplicationInstanceStatus '
        StringMatches: available
        Next: CreateReplicationTask
      - Or:
          - Variable: >-
              $.DescribeResult.ReplicationInstances[0].ReplicationInstanceStatus 
            StringMatches: creating
          - Variable: >-
              $.DescribeResult.ReplicationInstances[0].ReplicationInstanceStatus 
            StringMatches: deleting
        Next: Wait (2)
      - Variable: $.DescribeResult.ReplicationInstances[0].ReplicationInstanceStatus
        StringMatches: failed
        Next: FAIL Pass
  Wait (2):
    Type: Wait
    Next: DescribeReplicationInstances
    SecondsPath: $.DEFAULT_WAIT_SECONDS
  CreateReplicationTask:
    Type: Task
    Next: Wait
    Parameters:
      MigrationType: full-load
      ReplicationInstanceArn.$: $.DescribeResult.ReplicationInstances[0].ReplicationInstanceArn
      ReplicationTaskIdentifier.$: $.ReplicationTaskIdentifier
      SourceEndpointArn.$: $.SOURCE_ENDPOINT_ARN
      TargetEndpointArn.$: $.TARGET_ENDPOINT_ARN
      TableMappings.$: $.MIGRATION_TASK_PARAMETERS.TableMappings
    Resource: arn:aws:states:::aws-sdk:databasemigration:createReplicationTask
    ResultPath: $.CreateResponse
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: FAIL Pass
        ResultPath: $.ErrorCreateTask
  Wait:
    Type: Wait
    Next: StartReplicationTask
    SecondsPath: $.DEFAULT_WAIT_SECONDS
  StartReplicationTask:
    Type: Task
    Parameters:
      ReplicationTaskArn.$: $.CreateResponse.ReplicationTask.ReplicationTaskArn
      StartReplicationTaskType: reload-target
    Resource: arn:aws:states:::aws-sdk:databasemigration:startReplicationTask
    Next: DescribeReplicationTasks
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: FAIL Pass
        ResultPath: $.ErrorStartTask
    ResultPath: $.StartTaskResult
  DescribeReplicationTasks:
    Type: Task
    Parameters:
      Filters:
        - Name: replication-task-id
          Values.$: $.FILTER_TASK_REPLICATION
    Resource: arn:aws:states:::aws-sdk:databasemigration:describeReplicationTasks
    Next: Choice
    ResultPath: $.DescribeTaskResult
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: FAIL Pass
        ResultPath: $.ErrorDescribeReplicationTasks
  Choice:
    Type: Choice
    Choices:
      - Or:
          - Variable: $.DescribeTaskResult.ReplicationTasks[0].Status
            StringMatches: failed
        Next: FAIL Pass
      - And:
          - Variable: $.DescribeTaskResult.ReplicationTasks[0].Status
            StringMatches: stopped
          - Not:
              Variable: $.SKIP_DELETE
              StringMatches: 'true'
        Next: DeleteReplicationTask
      - Variable: $.SKIP_DELETE
        StringMatches: enable
        Next: StartCrawler
    Default: Wait (1)
  DeleteReplicationTask:
    Type: Task
    Next: Wait (3)
    Parameters:
      ReplicationTaskArn.$: $.DescribeTaskResult.ReplicationTasks[0].ReplicationTaskArn
    Resource: arn:aws:states:::aws-sdk:databasemigration:deleteReplicationTask
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: FAIL Pass
        ResultPath: $.ErrorDeleteTask
    ResultPath: $.DeleteTaskResult
  Wait (3):
    Type: Wait
    Next: DeleteReplicationInstance
    SecondsPath: $.DEFAULT_WAIT_SECONDS
  DeleteReplicationInstance:
    Type: Task
    Next: StartCrawler
    Parameters:
      ReplicationInstanceArn.$: $.DescribeResult.ReplicationInstances[0].ReplicationInstanceArn
    Resource: arn:aws:states:::aws-sdk:databasemigration:deleteReplicationInstance
    ResultPath: $.DeleteInstanceResult
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: FAIL Pass
        ResultPath: $.ErrorDeleteInstance
  StartCrawler:
    Type: Task
    Next: StartCrawler (1)
    Parameters:
      Name: dms_dev_georesearch_datalake
    Resource: arn:aws:states:::aws-sdk:glue:startCrawler
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: FAIL Pass
  StartCrawler (1):
    Type: Task
    Next: Success
    Parameters:
      Name: dms_prod_georesearch_datalake
    Resource: arn:aws:states:::aws-sdk:glue:startCrawler
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: FAIL Pass
  Wait (1):
    Type: Wait
    Next: DescribeReplicationTasks
    SecondsPath: $.DEFAULT_WAIT_SECONDS
  Success:
    Type: Succeed
  FAIL Pass:
    Type: Pass
    Next: DeleteReplicationInstance (1)
    InputPath: $.DescribeResult
    Parameters:
      DescribeResult: $.DescribeResult
    Result:
      DescribeResult: $.DescribeResult
    ResultPath: null
  DeleteReplicationInstance (1):
    Type: Task
    Next: Fail
    Parameters:
      ReplicationInstanceArn.$: $.DescribeResult.ReplicationInstances[0].ReplicationInstanceArn
    Resource: arn:aws:states:::aws-sdk:databasemigration:deleteReplicationInstance
    ResultPath: $.DeleteInstanceResult
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: Fail
        ResultPath: $.ErrorDeleteInstanceFinal
  Fail:
    Type: Fail
